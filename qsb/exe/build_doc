#!/bin/bash

# This shell script creates the documentation for qsb, modules and addons.

echo 'build QSB documentation'

# create folder
echo 'create destination directories'
rm -rf qsb/lua/var/build/doc &>/dev/null
rm -rf qsb/lua/var/md_doc &>/dev/null
mkdir -p qsb/lua/var/build/doc/temp/
mkdir -p qsb/lua/var/md_doc/

# create html documentation
cd qsb/exe/tools
cp docbuilderstart.txt ../../lua/var/build/doc/temp/docbuilder.lua
cp docbuilderend.txt ../../lua/var/build/doc/temp/docbuilderend.txt
cd ../../../

cd qsb/lua/modules
# Add modules to html documentation index
echo "Add modules to html documentation index"
for folder in *; do
    if ! ([ -f "$folder" ];) then
        cd $folder

        DESTINATION="../../var/build/doc/temp/docbuilder.lua"
        FILENAME="smodules/${folder,,}.lua"
        if [ $folder = "QSB_0_Kernel" ]; then
            echo "" >> $DESTINATION
            FILENAME="qsb.lua"
        fi
        TITLE=$(head -n 1 title.txt)
        echo "{\"${FILENAME}\", \"${TITLE}\"}," >> $DESTINATION

        cd ../
    fi
done

# Add compatibility files to html documentation index
echo "Add compatibility files to html documentation index"
DESTINATION="../var/build/doc/temp/docbuilder.lua"
echo "{\"tqsb_x_acomp.lua\", \"(X) KompatibilitÃ¤t\"}," >> $DESTINATION
DESTINATION="../var/build/source/tqsb_x_acomp.lua"
find . -maxdepth 2 -iname "compatibility.lua" -type f -exec cat {} +> $DESTINATION

cd ../../../

cd qsb/lua/addons
# Add addons to html documentation index
echo "Add addons to html documentation index"
for folder in *; do
    if ! ([ -f "$folder" ];) then
        cd $folder

        DESTINATION="../../var/build/doc/temp/docbuilder.lua"
        FILENAME="xaddons/${folder,,}.lua"
        if ! ([ $folder = "QSB_X_Addon_X_Template" ];) then
            TITLE=$(head -n 1 title.txt)
            echo "{\"${FILENAME}\", \"${TITLE}\"}," >> $DESTINATION
        fi

        cd ../
    fi
done
cd ../../../

# Finish creating docbuilder
echo "Finish creating docbuilder"
cd qsb/lua/var/build/doc/temp
cat "docbuilderend.txt" >> "docbuilder.lua"
cd ../../../../../../

#Temporary remove those files that need no documentation
cd qsb/lua/var
mv build/source/qsb_all.lua qsb_all.lua
mv build/source/qsb_comp.lua qsb_comp.lua
mv build/source/addons/ build/source/xaddons/
mv build/source/modules/ build/source/smodules/
cd ../../../

# Builds the documentations of the single modules
echo "Build the documentations of the single modules"
cd qsb/exe/tools
lua ldoc/ldoc.lua -d ../../lua/var/build/doc ../../lua/var/build/source/ #&>/dev/null
cd ../../../

# Put back those files that need no documentation
cd qsb/lua/var
mv qsb_all.lua build/source/qsb_all.lua
mv qsb_comp.lua build/source/qsb_comp.lua
mv build/source/xaddons/ build/source/addons/
mv build/source/smodules/ build/source/modules/

# Builds the documentation start page
echo "Build the documentations of the start page"
lua build/doc/temp/docbuilder.lua
cd ../../../

# Add an addon section to html files
cd qsb/lua/var/build/doc/modules
for file in *.html; do
    if [ -f "$file" ]; then
        echo $file
        VARIABLE="tqsb_x_acomp"
        OCCURENCES=$(grep -c $VARIABLE "${file}")
        echo "there are $OCCURENCES occurences"
        if [ "$OCCURENCES" -eq "0" ]; then
            if [ "$file" == "tqsb_x_acomp.html" ]; then
                echo "detected compatibility docu"
                VARIABLE="<li><strong>"
                OCCURENCES=$(grep -c $VARIABLE "${file}")
                echo "there are $OCCURENCES occurences"
            fi
        fi
        if ! ([ "$OCCURENCES" -eq "0" ];) then
            LINE=$(cat "${file}" | grep -n $VARIABLE | head -1 | cut -d":" -f1)
            echo "the line is $LINE"
            NEXTLINE=$((LINE+1))
            head -n $LINE "${file}" > temp.txt
            echo "" >> temp.txt
            echo "</ul>" >> temp.txt
            echo "<h2>Addons</h2>" >> temp.txt
            echo "<ul class="nowrap">" >> temp.txt
            echo "" >> temp.txt
            NEXTLINE=$((LINE+1))
            tail -n +$NEXTLINE "${file}" >> temp.txt
            mv temp.txt "${file}"
        fi
    fi
done
cd ../../../../../../

# Move html relevant files into the build directory
echo "Move html files into the build directory"
rm -rf qsb/lua/var/build/doc/js
cp -r qsb/templates/js qsb/lua/var/build/doc
rm -rf qsb/lua/var/build/doc/css
cp -r qsb/templates/css qsb/lua/var/build/doc

# Create markdown documentation for qsb
echo "Create markdown documentation for qsb"
cd qsb/lua/var/md_doc
lua ../../../exe/tools/ldoc/ldoc.lua -o qsb -v -f markdown -x "md" ../build/source/qsb.lua #&>/dev/null
cd ../../../../

# Create markdown documentation for modules
echo "Create markdown documentation for modules"
cd qsb/lua/modules
for folder in *; do
    if ! ([ -f "$folder" ];) then
        cd $folder

        FILENAME="modules/${folder,,}.lua"
        MDNAME="${folder,,}"
        if ! ( [ $folder = "QSB_0_Kernel" ]; ) then
            cd ../../var/md_doc
            lua ../../../exe/tools/ldoc/ldoc.lua -o $MDNAME -v -f markdown -x "md" "../build/source/${FILENAME}" #&>/dev/null
            cd ../../modules
            cd $folder
        fi

        cd ../
    fi
done
cd ../../../

# Create markdown documentation for addons
echo "Create markdown documentation for addons"
cd qsb/lua/addons
for folder in *; do
    if ! ([ -f "$folder" ];) then
        cd $folder

        FILENAME="addons/${folder,,}.lua"
        MDNAME="${folder,,}"
        if ! ([ $folder = "QSB_X_Addon_X_Template" ];) then
            cd ../../var/md_doc
            lua ../../../exe/tools/ldoc/ldoc.lua -o $MDNAME -v -f markdown -x "md" "../build/source/${FILENAME}" #&>/dev/null
            cd ../../modules
            cd $folder
        fi

        cd ../
    fi
done
cd ../../../

# Create markdown documentation for compatibility
echo "Create markdown documentation for compatibility"
cd qsb/lua/var/md_doc
lua ../../../exe/tools/ldoc/ldoc.lua -o compatibility -v -f markdown -x "md" ../build/source/tqsb_x_acomp.lua #&>/dev/null
cd ../../../../

# Remove temporary compatibility file
#rm qsb/lua/var/build/source/tqsb_x_acomp.lua

# Remove temporary files
#rm -rf qsb/lua/var/build/doc/temp &>/dev/null

echo 'documentation ready'